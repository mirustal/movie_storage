/*
Хранилище фильмов

API для управления хранилищем

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MoviesMovieIdPatchRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MoviesMovieIdPatchRequest{}

// MoviesMovieIdPatchRequest struct for MoviesMovieIdPatchRequest
type MoviesMovieIdPatchRequest struct {
	Title *string `json:"title,omitempty"`
	Description *string `json:"description,omitempty"`
	ReleaseDate *string `json:"releaseDate,omitempty"`
	Rating *float32 `json:"rating,omitempty"`
	ActorIds []string `json:"actorIds,omitempty"`
}

// NewMoviesMovieIdPatchRequest instantiates a new MoviesMovieIdPatchRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMoviesMovieIdPatchRequest() *MoviesMovieIdPatchRequest {
	this := MoviesMovieIdPatchRequest{}
	return &this
}

// NewMoviesMovieIdPatchRequestWithDefaults instantiates a new MoviesMovieIdPatchRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMoviesMovieIdPatchRequestWithDefaults() *MoviesMovieIdPatchRequest {
	this := MoviesMovieIdPatchRequest{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *MoviesMovieIdPatchRequest) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoviesMovieIdPatchRequest) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *MoviesMovieIdPatchRequest) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *MoviesMovieIdPatchRequest) SetTitle(v string) {
	o.Title = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *MoviesMovieIdPatchRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoviesMovieIdPatchRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MoviesMovieIdPatchRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MoviesMovieIdPatchRequest) SetDescription(v string) {
	o.Description = &v
}

// GetReleaseDate returns the ReleaseDate field value if set, zero value otherwise.
func (o *MoviesMovieIdPatchRequest) GetReleaseDate() string {
	if o == nil || IsNil(o.ReleaseDate) {
		var ret string
		return ret
	}
	return *o.ReleaseDate
}

// GetReleaseDateOk returns a tuple with the ReleaseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoviesMovieIdPatchRequest) GetReleaseDateOk() (*string, bool) {
	if o == nil || IsNil(o.ReleaseDate) {
		return nil, false
	}
	return o.ReleaseDate, true
}

// HasReleaseDate returns a boolean if a field has been set.
func (o *MoviesMovieIdPatchRequest) HasReleaseDate() bool {
	if o != nil && !IsNil(o.ReleaseDate) {
		return true
	}

	return false
}

// SetReleaseDate gets a reference to the given string and assigns it to the ReleaseDate field.
func (o *MoviesMovieIdPatchRequest) SetReleaseDate(v string) {
	o.ReleaseDate = &v
}

// GetRating returns the Rating field value if set, zero value otherwise.
func (o *MoviesMovieIdPatchRequest) GetRating() float32 {
	if o == nil || IsNil(o.Rating) {
		var ret float32
		return ret
	}
	return *o.Rating
}

// GetRatingOk returns a tuple with the Rating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoviesMovieIdPatchRequest) GetRatingOk() (*float32, bool) {
	if o == nil || IsNil(o.Rating) {
		return nil, false
	}
	return o.Rating, true
}

// HasRating returns a boolean if a field has been set.
func (o *MoviesMovieIdPatchRequest) HasRating() bool {
	if o != nil && !IsNil(o.Rating) {
		return true
	}

	return false
}

// SetRating gets a reference to the given float32 and assigns it to the Rating field.
func (o *MoviesMovieIdPatchRequest) SetRating(v float32) {
	o.Rating = &v
}

// GetActorIds returns the ActorIds field value if set, zero value otherwise.
func (o *MoviesMovieIdPatchRequest) GetActorIds() []string {
	if o == nil || IsNil(o.ActorIds) {
		var ret []string
		return ret
	}
	return o.ActorIds
}

// GetActorIdsOk returns a tuple with the ActorIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoviesMovieIdPatchRequest) GetActorIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ActorIds) {
		return nil, false
	}
	return o.ActorIds, true
}

// HasActorIds returns a boolean if a field has been set.
func (o *MoviesMovieIdPatchRequest) HasActorIds() bool {
	if o != nil && !IsNil(o.ActorIds) {
		return true
	}

	return false
}

// SetActorIds gets a reference to the given []string and assigns it to the ActorIds field.
func (o *MoviesMovieIdPatchRequest) SetActorIds(v []string) {
	o.ActorIds = v
}

func (o MoviesMovieIdPatchRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MoviesMovieIdPatchRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.ReleaseDate) {
		toSerialize["releaseDate"] = o.ReleaseDate
	}
	if !IsNil(o.Rating) {
		toSerialize["rating"] = o.Rating
	}
	if !IsNil(o.ActorIds) {
		toSerialize["actorIds"] = o.ActorIds
	}
	return toSerialize, nil
}

type NullableMoviesMovieIdPatchRequest struct {
	value *MoviesMovieIdPatchRequest
	isSet bool
}

func (v NullableMoviesMovieIdPatchRequest) Get() *MoviesMovieIdPatchRequest {
	return v.value
}

func (v *NullableMoviesMovieIdPatchRequest) Set(val *MoviesMovieIdPatchRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMoviesMovieIdPatchRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMoviesMovieIdPatchRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMoviesMovieIdPatchRequest(val *MoviesMovieIdPatchRequest) *NullableMoviesMovieIdPatchRequest {
	return &NullableMoviesMovieIdPatchRequest{value: val, isSet: true}
}

func (v NullableMoviesMovieIdPatchRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMoviesMovieIdPatchRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


