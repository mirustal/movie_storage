/*
Хранилище фильмов

API для управления хранилищем

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RegisterPost409Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RegisterPost409Response{}

// RegisterPost409Response struct for RegisterPost409Response
type RegisterPost409Response struct {
	Error string `json:"error"`
	Message string `json:"message"`
}

type _RegisterPost409Response RegisterPost409Response

// NewRegisterPost409Response instantiates a new RegisterPost409Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegisterPost409Response(error_ string, message string) *RegisterPost409Response {
	this := RegisterPost409Response{}
	this.Error = error_
	this.Message = message
	return &this
}

// NewRegisterPost409ResponseWithDefaults instantiates a new RegisterPost409Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegisterPost409ResponseWithDefaults() *RegisterPost409Response {
	this := RegisterPost409Response{}
	return &this
}

// GetError returns the Error field value
func (o *RegisterPost409Response) GetError() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Error
}

// GetErrorOk returns a tuple with the Error field value
// and a boolean to check if the value has been set.
func (o *RegisterPost409Response) GetErrorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Error, true
}

// SetError sets field value
func (o *RegisterPost409Response) SetError(v string) {
	o.Error = v
}

// GetMessage returns the Message field value
func (o *RegisterPost409Response) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *RegisterPost409Response) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *RegisterPost409Response) SetMessage(v string) {
	o.Message = v
}

func (o RegisterPost409Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RegisterPost409Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["error"] = o.Error
	toSerialize["message"] = o.Message
	return toSerialize, nil
}

func (o *RegisterPost409Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"error",
		"message",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRegisterPost409Response := _RegisterPost409Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRegisterPost409Response)

	if err != nil {
		return err
	}

	*o = RegisterPost409Response(varRegisterPost409Response)

	return err
}

type NullableRegisterPost409Response struct {
	value *RegisterPost409Response
	isSet bool
}

func (v NullableRegisterPost409Response) Get() *RegisterPost409Response {
	return v.value
}

func (v *NullableRegisterPost409Response) Set(val *RegisterPost409Response) {
	v.value = val
	v.isSet = true
}

func (v NullableRegisterPost409Response) IsSet() bool {
	return v.isSet
}

func (v *NullableRegisterPost409Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegisterPost409Response(val *RegisterPost409Response) *NullableRegisterPost409Response {
	return &NullableRegisterPost409Response{value: val, isSet: true}
}

func (v NullableRegisterPost409Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegisterPost409Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


