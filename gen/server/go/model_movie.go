/*
 * Хранилище фильмов
 *
 * API для управления хранилищем
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"errors"
)



type Movie struct {

	// Уникальный идентификатор фильма
	Id int32 `json:"id,omitempty"`

	Title string `json:"title"`

	Description string `json:"description"`

	ReleaseDate string `json:"releaseDate"`

	Rating float32 `json:"rating"`
}

// AssertMovieRequired checks if the required fields are not zero-ed
func AssertMovieRequired(obj Movie) error {
	elements := map[string]interface{}{
		"title": obj.Title,
		"description": obj.Description,
		"releaseDate": obj.ReleaseDate,
		"rating": obj.Rating,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertMovieConstraints checks if the values respects the defined constraints
func AssertMovieConstraints(obj Movie) error {
	if obj.Rating < 0 {
		return &ParsingError{Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.Rating > 10 {
		return &ParsingError{Err: errors.New(errMsgMaxValueConstraint)}
	}
	return nil
}
